# Configure general config
quarkus.http.host=0.0.0.0
quarkus.http.port=9191
quarkus.log.level=INFO

# Configure the MQTT source (we read from it)
mp.messaging.incoming.mqtt-broker.type=smallrye-mqtt
mp.messaging.incoming.mqtt-broker.topic=homeiot/tph
mp.messaging.incoming.mqtt-broker.host=<AWS IoT, Settings, Device Data Endpoint's FQDN>
mp.messaging.incoming.mqtt-broker.port=8883
mp.messaging.incoming.mqtt-broker.auto-generated-client-id=false
mp.messaging.incoming.mqtt-broker.client-id=<AWS IoT, Thing's name>
mp.messaging.incoming.mqtt-broker.ssl=true
mp.messaging.incoming.mqtt-broker.ssl.keystore.location=<AWS IoT, Thing's name>-certificate.pem.crt
mp.messaging.incoming.mqtt-broker.ssl.keystore.password=<AWS IoT, Thing's name>-private.pem.key
mp.messaging.incoming.mqtt-broker.ssl.keystore.type=pem
mp.messaging.incoming.mqtt-broker.ssl.truststore.location=AmazonRootCA1.pem
mp.messaging.incoming.mqtt-broker.ssl.truststore.type=pem

# Configure the Homeiot API destination
quarkus.rest-client.homeiot-api.url=http://<API-Server-FQDN>:<API-Server-Port>/<API-Path>
quarkus.rest-client.homeiot-api.scope=javax.inject.Singleton
#mp.messaging.outgoing.homeiot-api.connector=quarkus-http
#mp.messaging.outgoing.homeiot-api.url=http://<API-Server-FQDN>:<API-Server-Port>/<API-Path>
#mp.messaging.outgoing.homeiot-api.method=POST

# Configure the Homeiot API destination dynamically
tt.rest-client.keys=legacy-api,msa-api1,msa-api2
tt.rest-client.legacy-api.url=http://<API-Server-FQDN>:<API-Server-Port>/<API-Path>
tt.rest-client.msa-api1.url=http://<API-Server-FQDN>:<API-Server-Port>
tt.rest-client.msa-api2.url=http://<API-Server-FQDN>:<API-Server-Port>